services:
  # MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: iot_mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./docker/mosquitto/config:/mosquitto/config
      - ./docker/mosquitto/data:/mosquitto/data
      - ./docker/mosquitto/log:/mosquitto/log
    restart: unless-stopped
    networks:
      - iot_network

  # PostgreSQL Database (Alternative to SQLite for production)
  postgres:
    image: postgres:15
    container_name: iot_postgres
    environment:
      POSTGRES_DB: iot_platform
      POSTGRES_USER: iot_user
      POSTGRES_PASSWORD: iot_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - iot_network

  # InfluxDB for Time-Series Data
  influxdb:
    image: influxdb:2.7
    container_name: iot_influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: adminpassword
      DOCKER_INFLUXDB_INIT_ORG: iot_org
      DOCKER_INFLUXDB_INIT_BUCKET: iot_data
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: iot-admin-token-12345
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    restart: unless-stopped
    networks:
      - iot_network

  # Redis for Caching and Session Storage
  redis:
    image: redis:7-alpine
    container_name: iot_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - iot_network
    command: redis-server --appendonly yes

  # MongoDB for Document Storage (Optional)
  mongodb:
    image: mongo:7
    container_name: iot_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
      MONGO_INITDB_DATABASE: iot_platform
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - iot_network

  # Grafana for Data Visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: iot_grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - iot_network
    depends_on:
      - influxdb

  # IoT Platform Backend
  iot_backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: iot_backend
    environment:
      DATABASE_URL: postgresql://iot_user:iot_password@postgres:5432/iot_platform
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: iot-admin-token-12345
      INFLUXDB_ORG: iot_org
      INFLUXDB_BUCKET: iot_data
      REDIS_URL: redis://redis:6379
      MQTT_BROKER_HOST: mosquitto
      MQTT_BROKER_PORT: 1883
      SECRET_KEY: your-secret-key-change-in-production
    ports:
      - "5000:5000"
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - iot_network
    depends_on:
      - postgres
      - influxdb
      - redis
      - mosquitto

  # IoT Platform Frontend
  iot_frontend:
    build:
      context: ../iot-dashboard
      dockerfile: Dockerfile
    container_name: iot_frontend
    ports:
      - "3001:80"
    restart: unless-stopped
    networks:
      - iot_network
    depends_on:
      - iot_backend

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: iot_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    restart: unless-stopped
    networks:
      - iot_network
    depends_on:
      - iot_backend
      - iot_frontend

volumes:
  postgres_data:
  influxdb_data:
  influxdb_config:
  redis_data:
  mongodb_data:
  grafana_data:

networks:
  iot_network:
    driver: bridge

